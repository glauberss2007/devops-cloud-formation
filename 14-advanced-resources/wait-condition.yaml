Parameters:
  # Parameter for specifying the EC2 KeyPair name to enable SSH access to the instance
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances

  # Parameter for specifying the IP range that is allowed to SSH into the EC2 instance
  SSHLocation:
    Type: String
    Description: The IP address range that can be used to SSH to the EC2 instances
    MinLength: '9'  # Minimum length of the CIDR notation
    MaxLength: '18' # Maximum length of the CIDR notation
    Default: 0.0.0.0/0  # Default allows SSH access from any IP address
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  
  # Parameter specifying the Amazon Machine Image (AMI) ID using AWS SSM Parameter store
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  # A handle to use in the wait condition, this is used by the instance to signal readiness
  InstanceWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  
  # A wait condition to pause the stack creation until the instance initialization is complete
  InstanceWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: MyEC2Instance  # This wait condition depends on the EC2 instance being created
    Properties:
      Handle: !Ref InstanceWaitHandle  # Reference to the wait handle for signaling
      Count: 1  # Expecting one signal to mark completion
      Timeout: "3600"  # Will wait up to 3600 seconds for the signal to arrive
  
  # EC2 Instance resource definition
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId  # Use the AMI ID specified in the parameters
      InstanceType: t2.micro  # Use a t2.micro instance type, which is eligible for free tier
      KeyName: !Ref KeyName  # Reference to the KeyName parameter
      SecurityGroups:
        - !Ref InstanceSecurityGroup  # Attach the security group defined below for SSH access
      UserData:  # Script to be run on instance launch
        Fn::Base64:  # Encode the script in Base64 as required by AWS
          !Sub |
            #!/bin/bash -xe

            # Update all installed packages to latest versions
            yum update -y

            # Install CloudFormation helper scripts
            yum install -y aws-cfn-bootstrap

            # Perform configuration or setup tasks here
            date > /tmp/datefile  # Example: Write the current date to a file
            cat /tmp/datefile  # Display the date content

            sleep 10s  # Simulate delay representing further configuration actions

            # Signal the wait condition to indicate this instance is ready
            /opt/aws/bin/cfn-signal -e $? --data "This is from the EC2 instance" --reason "Build process complete." '${InstanceWaitHandle}'

  # Security Group for allowing SSH access to the instance
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22  # Port for SSH access
          ToPort: 22
          CidrIp: !Ref SSHLocation # CIDR IP range allowed for SSH access

  # SNS Topic used as an example resource, created after the instance signals readiness
  MySNSTopic:
    Type: AWS::SNS::Topic
    DependsOn: InstanceWaitCondition  # Ensure this only gets created once the instance setup is complete
    Properties:
      TopicName: DemoTopic  # Name for the SNS topic
