AWSTemplateFormatVersion: 2010-09-09
Description: Create a S3 bucket that follows MyCompany's standards

Parameters:
  KMSKeyAlias:
    Description: >
      The alias for your KMS key. If you leave this field empty, the KMS key
      alias won't be created. It must start with a letter and cannot begin with 'aws'.
    Type: String
    AllowedPattern: '^(?!aws)([a-zA-Z0-9\-\_\/]){1,32}$|^$'
    MinLength: 0
    MaxLength: 32
    ConstraintDescription: >
      KMS key alias must be between 1 and 32 characters long and can include letters, numbers, hyphens, underscores, and slashes.

  ReadOnlyArn:
    Description: >
      ARN of an existing IAM role with read-only access to the S3 bucket. If not specified, access is granted only to the current account root.
    Type: String
    Default: ''
    AllowedPattern: >
      ^(arn:aws:iam::\d{12}:role(/|/[\w!#"\$%&'()*+,.\-/:;=?@\[\\\]^_`{|}~]{1,510}/)?[\w+=,.@\-]{1,64})$|^$
    ConstraintDescription: >
      Must be a valid IAM role ARN in the format 'arn:aws:iam::<account-number>:role/<role-name>'.

  ReadWriteArn:
    Description: >
      ARN of an existing IAM role with read and write access to the S3 bucket. If not specified, access is granted only to the current account root.
    Type: String
    Default: ''
    AllowedPattern: >
      ^(arn:aws:iam::\d{12}:role(/|/[\w!#"\$%&'()*+,.\-/:;=?@\[\\\]^_`{|}~]{1,510}/)?[\w+=,.@\-]{1,64})$|^$
    ConstraintDescription: >
      Must be a valid IAM role ARN in the format 'arn:aws:iam::<account-number>:role/<role-name>'.

Resources:
  KmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Enabled: true  # Enables the KMS key
      EnableKeyRotation: true  # Automatically rotates the key
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: 'Allow full control to account root'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: 'Allow decrypt access to ReadOnlyRole'
            Effect: Allow
            Principal:
              AWS: !Ref ReadOnlyArn
            Action:
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
            Resource: '*'
          - Sid: 'Allow encrypt/decrypt access to ReadWriteRole'
            Effect: Allow
            Principal:
              AWS: !Ref ReadWriteArn
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'

  KmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${KMSKeyAlias}'  # Sets the alias for the KMS key
      TargetKeyId: !Ref KmsKey  # Associates the alias with the created KMS key

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl  # Provides full control to the bucket owner
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref KmsKey  # Uses the KMS key for bucket encryption
              SSEAlgorithm: 'aws:kms'  # Specifies encryption using AWS KMS
      BucketName: !Sub '${AWS::StackName}-${AWS::AccountId}-${AWS::Region}'  # Ensures a unique bucket name
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true  # Prevents public ACLs
        IgnorePublicAcls: true  # Ignores any public ACLs already set
        BlockPublicPolicy: true  # Blocks public bucket policies
        RestrictPublicBuckets: true  # Restricts public bucket status

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket  # Associates the policy with the bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyIncorrectEncryptionHeader
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-server-side-encryption': 'AES256'  # Ensures correct encryption header
          - Sid: DenyPublicReadACL
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - public-read
                  - public-read-write
                  - authenticated-read  # Denies setting public ACLs
          - Sid: DenyPublicReadGrant
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringLike:
                's3:x-amz-grant-read':
                  - '*http://acs.amazonaws.com/groups/global/AllUsers*'
                  - '*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*'  # Deny grants that allow public read
          - Sid: DenyNonHttpsConnections
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false  # Denies non-HTTPS requests
          - Sid: 'Allow ReadOnlyRole access'
            Effect: Allow
            Principal:
              AWS: !Ref ReadOnlyArn
            Action:
              - 's3:GetObject'
              - 's3:GetObjectTagging'
              - 's3:ListBucket'  # Allows ReadOnlyRole to access and list bucket objects
            Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              - !Sub 'arn:aws:s3:::${Bucket}/*'
          - Sid: 'Allow ReadWriteRole access'
            Effect: Allow
            Principal:
              AWS: !Ref ReadWriteArn
            Action:
              - 's3:DeleteObject'
              - 's3:DeleteObjectTagging'
              - 's3:GetObject'
              - 's3:GetObjectTagging'
              - 's3:ListBucket'
              - 's3:PutObject'
              - 's3:PutObjectTagging'  # Allows ReadWriteRole to manage objects
            Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              - !Sub 'arn:aws:s3:::${Bucket}/*'

Outputs:
  BucketArn:
    Description: ARN of the bucket created.
    Value: !GetAtt Bucket.Arn  # Outputs the bucket's ARN for reference

  BucketName:
    Description: Name of the bucket created.
    Value: !Ref Bucket  # Outputs the name of the bucket

  KmsKeyAlias:
    Description: Alias of the SSE-KMS Customer Managed Key used to encrypt S3 bucket content.
    Value: !Ref KmsKeyAlias  # Outputs the KMS key alias

  KmsKeyArn:
    Description: ARN of the SSE-KMS Customer Managed Key used to encrypt S3 bucket content.
    Value: !GetAtt KmsKey.Arn  # Outputs the KMS key's ARN
